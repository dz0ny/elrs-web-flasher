(self.webpackChunkflasher=self.webpackChunkflasher||[]).push([[529],{8993:(t,e,s)=>{"use strict";s.r(e),s.d(e,{ESPFlasher:()=>h});var r=s(5965),i=s(5946),n=s(2180),o=s(1354),a=s.n(o);class h{constructor(t,e,s,r,i,n,o){this.device=t,this.type=e,this.method=s,this.config=r,this.options=i,this.firmwareUrl=n,this.term=o}connect=async()=>{let t,e="default_reset",s=460800;"betaflight"===this.method?(s=42e4,e="no_reset"):"etx"===this.method?(s=230400,e="no_reset"):"uart"===this.method&&"TX"===this.type&&(t=115200);const o=new r.M(this.device,!0);this.esploader=new i.p(o,s,this.term,void 0===t?s:t),this.esploader.ESP_RAM_BLOCK=2048;const a=new n.Z(o,this.term,this.config.firmware,s);return"uart"===this.method?"RX"===this.type?await o.connect({baud:s}).then((t=>this.esploader._connect_attempt())).then((t=>{if("success"!==t)return o.disconnect().then((t=>o.connect({baud:42e4}))).then((t=>a.reset_to_bootloader()))})):await o.connect({baud:115200}):"betaflight"===this.method?await o.connect({baud:s}).then((t=>a.betaflight())).then((t=>a.reset_to_bootloader())):"etx"===this.method&&await o.connect({baud:s}).then((t=>a.edgeTX())),o.disconnect().then((t=>this.esploader.main_fn({mode:e}))).then((t=>(console.log("Settings done for :"+t),t)))};flash=async(t,e)=>{const s=this.esploader;"etx"!==this.method&&"betaflight"!==this.method||(s.FLASH_WRITE_SIZE=2048);const r=t.map((t=>({data:s.ui8ToBstr(t.data),address:t.address})));return s.write_flash({fileArray:r,flash_size:"keep",erase_all:e,reportProgress:(t,e,s)=>{const r=Math.round(e/s*100);document.getElementById("progressBar").value=r,document.getElementById("status").innerHTML=`Flashing: ${r}% uploaded... please wait`},calculateMD5Hash:t=>a().MD5(a().enc.Latin1.parse(t))}).then((t=>(document.getElementById("progressBar").value=100,document.getElementById("status").innerHTML="Flashing complete","esp32"===this.config.platform?s.hard_reset().catch((()=>{})):s.soft_reset().catch((()=>{})))))}}},2180:(t,e,s)=>{"use strict";s.d(e,{F:()=>n,Z:()=>o});var r=s(7973),i=s(905);class n{static INIT_SEQ={CRSF:[236,4,50,this.ord("b"),this.ord("l")],GHST:[137,4,50,this.ord("b"),this.ord("l")]};static BIND_SEQ={CRSF:[236,4,50,this.ord("b"),this.ord("d")],GHST:[137,4,50,this.ord("b"),this.ord("d")]};static ord(t){return t.charCodeAt(0)}static calc_crc8(t,e=213){let s=0;for(let r=0;r<t.byteLength;r++){s^=t[r];for(let t=0;t<8;++t)s=0!=(128&s)?(s<<1^e)%256:(s<<1)%256}return s}static get_telemetry_seq(t,e=null){const s=new Uint8Array(t);let r=new Uint8Array;if(null!=e){const t=e.length;r=new Uint8Array(t);for(let s=0;s<t;s++)r[s]=e.charCodeAt(s)}const i=new Uint8Array(s.byteLength+r.byteLength+1);i.set(s,0),i.set([s[1]+r.byteLength],1),i.set(r,s.byteLength);const n=this.calc_crc8(i.slice(2,i.byteLength-1));return i.set([n],s.byteLength+r.byteLength),i}static get_init_seq(t,e=null){return this.get_telemetry_seq(this.INIT_SEQ[t],e)}static get_bind_seq(t,e=null){return this.get_telemetry_seq(this.BIND_SEQ[t],e)}}class o{constructor(t,e,s,r,i=!1,n=!1){this.transport=t,this.terminal=e,this.flash_target=s,this.baudrate=r,this.half_duplex=i,this.uploadforce=n}_validate_serialrx=(t,e)=>this.transport.write_string("get "+t+"\r\n").then((t=>this.transport.read_line({timeout:100}))).then((t=>{console.log(t);for(const s of e)if(-1!==t.trim().indexOf(" = "+s))return console.log("found"),!0;return console.log("NOT found"),!1}));_sleep(t){return new Promise((e=>setTimeout(e,t)))}log(t){this.terminal.writeln(t)}edgeTX=()=>{this.log("======== PASSTHROUGH INIT ========");const t=(t,e,s)=>this.transport.write_string(t).then((t=>this.transport.read_line({timeout:100}))).then((t=>{if(-1===t.indexOf(e))throw new i.n("Failed Passthrough Initialisation",`Wanted '${e}', but not found in response '${t}'`)})).then((t=>this._sleep(s)));return this.transport.set_delimiters(["> "]),t("set pulses 0\n","set: ",500).then((e=>t("set rfmod 0 power off\n","set: ",500))).then((e=>t("set rfmod 0 bootpin 1\n","set: ",100))).then((e=>t("set rfmod 0 power on\n","set: ",100))).then((e=>t("set rfmod 0 bootpin 0\n","set: ",0))).then((t=>{this.log("Enabling serial passthrough..."),this.transport.set_delimiters(["\n"]);const e="serialpassthrough rfmod 0 "+this.transport.baudrate.toString();return this.log(`  CMD: '${e}`),this.transport.write_string(e+"\n").then((t=>this.transport.read_line({timeout:200})))})).then((t=>this.log("======== PASSTHROUGH DONE ========"))).catch((t=>(this.log(t.message),this.log("======== PASSTHROUGH FAILED ========"),Promise.reject(t))))};betaflight=()=>(this.log("======== PASSTHROUGH INIT ========"),this.transport.write_string("#\r\n").then((t=>(this.transport.set_delimiters(["# ","CCC"]),this.transport.read_line({timeout:200})))).then((t=>{if(-1!==t.indexOf("CCC"))return void this.log("Passthrough already enabled and bootloader active");if(!t.trim().endsWith("#"))return void this.log("No CLI available. Already in passthrough mode?, If this fails reboot FC and try again!");this.transport.set_delimiters(["# "]);let e=[];e=this.half_duplex?["GHST"]:["CRSF","ELRS"];const s=[];return this._validate_serialrx("serialrx_provider",e).then((t=>{t||s.push("Serial Receiver Protocol is not set to CRSF! Hint: set serialrx_provider = CRSF")})).then((t=>this._validate_serialrx("serialrx_inverted",["OFF"]))).then((t=>{t||s.push("Serial Receiver UART is inverted! Hint: set serialrx_inverted = OFF")})).then((t=>this._validate_serialrx("serialrx_halfduplex",["OFF","AUTO"]))).then((t=>{t||s.push("Serial Receiver UART is not in full duplex! Hint: set serialrx_halfduplex = OFF")})).then((t=>this._validate_serialrx("rx_spi_protocol",["EXPRESSLRS"]))).then((t=>{t&&s.push("ExpressLRS SPI RX detected\n\nUpdate via betaflight to flash your RX\nhttps://www.expresslrs.org/2.0/hardware/spi-receivers/")})).then((t=>{if(s.length>0){let t="";this.log("[ERROR] Invalid serial RX configuration detected:\n");for(const e of s)this.log("    !!! "+e+" !!!"),t+=e+"\n";throw this.log("\n    Please change the configuration and try again!"),new i.n("Invalid serial RX configuration detected",t)}})).then((t=>(this.log("\nAttempting to detect FC UART configuration..."),this.transport.write_string("serial\r\n")))).then((async t=>{this.transport.set_delimiters(["\n"]);let e=!1;for(;;){const t=await this.transport.read_line({timeout:200});if(""===t)break;if(t.startsWith("serial")){const s=/serial (?<port>[0-9]+) 64 /,r=t.match(s);if(r&&r.groups&&r.groups.port){e=r.groups.port;break}}}if(!e)throw this.log("!!! RX Serial not found !!!!\n  Check configuration and try again..."),new i.n("Serial RX not found","Check flight controller RX configuration");return e})).then((t=>this.transport.write_string(`serialpassthrough ${t} ${this.transport.baudrate}\r\n`))).then((t=>this._sleep(200))).then((async t=>{try{for(let t=0;t<10;t++)await this.transport.read_line({timeout:200})}catch(t){}this.log("======== PASSTHROUGH DONE ========")}))})));reset_to_bootloader=()=>{let t;if(this.log("======== RESET TO BOOTLOADER ========"),this.half_duplex)this.log("Using half duplex (GHST)"),t=this.transport.write_array(n.get_init_seq("GHST"));else{this.log("Using full duplex (CRSF)");const e=new Uint8Array(32);e.fill(85),t=this.transport.write_array(new Uint8Array([7,7,18,32])).then((t=>this.transport.write_array(e))).then((t=>this._sleep(200))).then((t=>this.transport.rawRead({timeout:1}))).catch((t=>{})).then((t=>this.transport.write_array(n.get_init_seq("CRSF")))).then((t=>this._sleep(200)))}return t.then((t=>(this.transport.set_delimiters(["\n"]),this.transport.read_line({timeout:200})))).then((t=>t.trim())).then((t=>(console.log("got string "+t),t))).then((async t=>{if(console.log("rxtarget "+t),""===t)this.log("Cannot detect RX target, blindly flashing!");else if(this.uploadforce)this.log(`Force flashing ${this.flash_target}, detected ${t}`);else if(t.toUpperCase()!==this.flash_target.toUpperCase()){if("confirm"!==await(0,r.Q)({type:"question",title:"Targets Mismatch",message:`Wrong target selected your RX is '${t}', trying to flash '${this.flash_target}'`,confirmText:"Flash anyway",cancelText:"Cancel"}))throw this.log(`Wrong target selected your RX is '${t}', trying to flash '${this.flash_target}'`),new i.P}else""!==this.flash_target&&this.log(`Verified RX target '${this.flash_target}'`);return this.log("======== BOOTLOADER ENGAGED ========"),this._sleep(500)}))}}},5965:(t,e,s)=>{"use strict";s.d(e,{M:()=>i});var r=s(3820);class i extends r.J{ui8ToBstr(t){let e="";for(let s=0;s<t.length;s++)e+=String.fromCharCode(t[s]);return e}bstrToUi8(t){const e=t.length,s=new Uint8Array(e);for(let r=0;r<e;r++)s[r]=t.charCodeAt(r);return s}set_delimiters(t=["\n","CCC"]){this.delimiters=[];for(const e of t)this.delimiters.push(this.bstrToUi8(e))}read_line=async({timeout:t=0}={})=>{let e;console.log("Read with timeout "+t);let s=this.left_over;this.left_over=new Uint8Array;const r=this.delimiters;function i(t){const e=t.findIndex(((t,e,s)=>{for(const t of r)if(t.every(((t,r)=>s[e+r]===t)))return!0;return!1}));if(-1!==e)for(const s of r)if(s.every(((s,r)=>t[e+r]===s)))return e+s.length;return-1}let n=i(s);if(-1===n){const r=this.device.readable.getReader();try{t>0&&(e=setTimeout((function(){r.cancel()}),t));do{const{value:t,done:e}=await r.read();if(e)return r.releaseLock(),await this.device.close(),await this.device.open({baudRate:this.baudrate}),"";s=new Uint8Array(this._appendBuffer(s.buffer,t.buffer)),n=i(s)}while(-1===n);r.releaseLock()}finally{t>0&&clearTimeout(e)}}return this.left_over=s.slice(n),s=s.slice(0,n),this.tracing&&(console.log("Read bytes"),console.log(this.hexdump(s))),this.ui8ToBstr(s)};write_string=async t=>{const e=this.device.writable.getWriter(),s=this.bstrToUi8(t);this.tracing&&(console.log("Write bytes"),console.log(this.hexdump(s))),await e.write(s.buffer),e.releaseLock()};write_array=async t=>{const e=this.device.writable.getWriter();this.tracing&&(console.log("Write bytes"),console.log(this.hexdump(t))),await e.write(t.buffer),e.releaseLock()}}},2480:()=>{}}]);